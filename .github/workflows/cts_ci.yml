name: SYCL CTS CI

on:
  pull_request:
  workflow_dispatch:

jobs:
  build-common-base-image:
    runs-on: ubuntu-20.04
    steps:
      - name: Checkout
        uses: actions/checkout@v2
        with:
          submodules: true
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1
      - name: Login to DockerHub
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}
      - name: Build common base image
        uses: docker/build-push-action@v2
        with:
          context: docker/common
          push: true
          tags: khronosgroup/sycl-cts-ci:common
          cache-from: type=registry,ref=khronosgroup/sycl-cts-ci:common
          cache-to: type=inline

  build-image-for-sycl-impl:
    needs: build-common-base-image
    runs-on: ubuntu-20.04
    strategy:
      fail-fast: false
      # NB: Don't forget to update versions in compile-cts step as well
      matrix:
        include:
          # ComputeCpp images are built by Codeplay for the time being
          # - sycl-impl: computecpp
          # version: 2.8.0
          - sycl-impl: dpcpp
            version: 1f3f9b9
          - sycl-impl: hipsycl
            version: b836149
    steps:
      - name: Checkout
        uses: actions/checkout@v2
        with:
          submodules: true
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1
      - name: Login to DockerHub
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}
      - name: Build SYCL container image
        uses: docker/build-push-action@v2
        with:
          context: docker/${{ matrix.sycl-impl }}
          push: true
          tags: khronosgroup/sycl-cts-ci:${{ matrix.sycl-impl }}-${{ matrix.version }}
          cache-from: type=registry,ref=khronosgroup/sycl-cts-ci:${{ matrix.sycl-impl }}-${{ matrix.version }}
          cache-to: type=inline
          build-args: |
            IMPL_VERSION=${{ matrix.version }}

  compile-cts:
    needs: build-image-for-sycl-impl
    runs-on: ubuntu-20.04
    strategy:
      fail-fast: false
      # NB: Don't forget to update versions in build-image-for-sycl-impl step as well
      matrix:
        include:
          - sycl-impl: computecpp
            version: 2.8.0
          - sycl-impl: dpcpp
            version: 1f3f9b9
          - sycl-impl: hipsycl
            version: b836149
    env:
      container-workspace: /__w/${{ github.event.repository.name }}/${{ github.event.repository.name }}
      parallel-build-jobs: 2
    container:
      # image: khronosgroup/sycl-cts-ci:${{ matrix.sycl-impl }}-${{ matrix.version }}
      # ComputeCpp images are hosted by Codeplay
      image: ${{ format('{0}/sycl-cts-ci:{1}-{2}', matrix.sycl-impl != 'computecpp' && 'khronosgroup' || 'scottstraughan', matrix.sycl-impl, matrix.version) }}
    steps:
      - name: Checkout
        uses: actions/checkout@v2
        with:
          submodules: true
      - name: Configure CMake
        working-directory: ${{ env.container-workspace }}
        run: |
          bash /scripts/configure.sh \
            -DSYCL_CTS_EXCLUDE_TEST_CATEGORIES="${{ env.container-workspace }}/ci/${{ matrix.sycl-impl }}.filter" \
            -DSYCL_CTS_MEASURE_BUILD_TIMES=ON
      - name: Build 'oclmath'
        working-directory: ${{ env.container-workspace }}/build
        run: cmake --build . --target oclmath
      - name: Build 'util'
        working-directory: ${{ env.container-workspace }}/build
        run: cmake --build . --target util
      - name: Build all supported test categories
        working-directory: ${{ env.container-workspace }}/build
        run: |
          TS_BEFORE=$(date +%s)
          cmake --build . --target test_all --parallel ${{ env.parallel-build-jobs }}
          TS_AFTER=$(date +%s)
          ELAPSED=$(($TS_AFTER - $TS_BEFORE))
          sort --numeric-sort --reverse --output=build_times.log build_times.log
          echo "Total time: $( date --date=@$ELAPSED --utc '+%-Hh %-Mm %-Ss' )" >> build_times.log
      - name: Upload build times artifact
        uses: actions/upload-artifact@v2
        with:
          name: build-times-${{ matrix.sycl-impl }}
          path: ${{ env.container-workspace }}/build/build_times.log
